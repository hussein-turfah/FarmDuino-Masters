<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class PlantController extends Controller
{
    #function to get the plant image from trefle api using Genus and species generated by the GPT-3 model
    public function getPlantImage() {
        $trefle_api = getenv('TREFLE_API_KEY');
        $genus_species = $this->getPlantGenusSpecies();

        //split string into array
        $genus_species = explode(' ', $genus_species);

        // Check if the array has at least two elements
        if (isset($genus_species[0]) && isset($genus_species[1])) {
            $genus = $genus_species[0];
            $species = $genus_species[1];

            //Initialize new curl session, then set options, then execute it, and then close the session
            $curl = curl_init();
            curl_setopt_array($curl, [
                CURLOPT_URL => "https://trefle.io/api/v1/plants/search?token=$trefle_api&q=$genus&q=$species",
                CURLOPT_RETURNTRANSFER => true,
            ]);
            $response = curl_exec($curl);
            curl_close($curl);

            $response = json_decode($response, true); //set to true because we want to return an array instead of an object

            if (isset($response['data'][0]['image_url'])) {
                $image_url = $response['data'][0]['image_url'];
                return response()->json(['image_url' => $image_url], 200);
            } else {
                // Handle the case where image URL is not available in the response
                return response()->json(['error' => 'Image URL not found'], 404);
            }
        } else {
            // Handle the case where the genus_species array does not have enough elements
            return response()->json(['error' => 'Invalid genus_species format'], 400);
        }
    }

    #function to get the plant Genus and species from GPT-3 model output, and then return the plant image
    public function getPlantGenusSpecies(){
        $AI_Controller = new AIController();
        $query = $AI_Controller->askAI();

        $query = json_decode($query);

        // Check if Genus_species property exists
        if (isset($query->Genus_species)) {
            return $query->Genus_species;
        } else {
            // Handle the case where Genus_species property is not available
            // You can return a default value or throw an exception
            return ""; // Return an empty string as a default value
        }
    }

}
